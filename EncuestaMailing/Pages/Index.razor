@page "/"
@using Newtonsoft.Json.Linq
@using Newtonsoft.Json
@using System.Text.RegularExpressions

<h2>Mailing: Encuesta de Satisfacción</h2>

@if (msjPost)
{
    <div class="alert alert-success" role="alert">
        @mensajePost
    </div>
}

@if (clientes.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Código</th>
                <th>Email</th>
                <th>Nombre</th>
                <th>Fecha</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in clientes)
            {
                <tr>
                    <td>@cliente.codigo.ToString()</td>
                    <td>@cliente.email</td>
                    <td>@cliente.name</td>
                    <td>@cliente.fecha</td>

                </tr>
            }
        </tbody>
    </table>
}


    @code
{

            bool msjPost = false;
            string mensajePost = "";
        private static HttpClient _httpClient = new HttpClient();

        List<Cliente> clientes = new List<Cliente>();

        //protected override Task OnInitializedAsync()
        //{
        //    StartTimer();
        //    return base.OnInitializedAsync();
        //}

        protected override async Task OnInitializedAsync()
        {
            await base.OnInitializedAsync();
            await StartTimer();
        }



        async Task StartTimer()
        {
            bool stop = true;
            while (stop)
            {
                await Task.Delay(20000);
                if (stop)
                {
                    ClienteNuevo();
                    StateHasChanged();
                }
            }
        }

        public class Cliente
        {
            public int codigo { get; set; }
            public int empresa { get; set; }
            public int sucursal { get; set; }
            public string fecha { get; set; }
            public string email { get; set; }
            public string name { get; set; }
            public string username { get; set; }
            public string password { get; set; }
            public string brand { get; set; }
            public string reply_to { get; set; }
            public string campaign_id { get; set; }
            public string estado { get; set; }
            public string detalle { get; set; }
        }

        void ClienteNuevo()
        {
            msjPost = false;

            string urlCli = "http://200.7.208.131:8080/ApiRest/services/JavaMobil/clienteEncuesta";
            string ljson = @"{
                nombre : 'Roberto'
                }";

            JObject o = JObject.Parse(ljson);
            POSTDataCli(o, urlCli);
        }

        public void POSTDataCli(object json, string url)
        {
            using (var content = new StringContent(JsonConvert.SerializeObject(json), System.Text.Encoding.UTF8, "application/json"))
            {
                HttpResponseMessage result = _httpClient.PostAsync(url, content).Result;
                //if (result.StatusCode == System.Net.HttpStatusCode.Created)

                if (result.IsSuccessStatusCode)
                {
                    string jsonString = result.Content.ReadAsStringAsync()
                    .Result
                    .Replace("\\", "")
                    .Trim(new char[1] { '"' });

                    List<Cliente> objCliente = JsonConvert.DeserializeObject<List<Cliente>>(jsonString);

                    if (objCliente.Count == 0)
                    {
                        msjPost = true;
                        DateTime now = DateTime.Now;
                        clientes.Clear();
                        mensajePost = "No hay datos que enviar!  " + now.ToString();
                    }
                    else
                    {
                        foreach (Cliente liClie in objCliente)
                        {
                            string lemail = liClie.email;
                            string lname = liClie.name;
                            if (RevisaEmail(lemail))
                            {
                                string lactjson = @"{
                            username: 'royaltex','password': 'r05alT73x2020','brand':'LEE JEANS', 'reply_to':'servicioalcliente@royaltex.com.ec', 'campaign_id': '540','email': '" + lemail + "','name': '" + lname +
                                 "'}";

                                JObject ljson = JObject.Parse(lactjson);

                                string urlCli = "https://www.nodeanalytics.net/api/v1/mailing.php";

                                POSTDataActClienteNew(ljson, urlCli, liClie);
                            }

                            clientes = objCliente;

                        } } }
                else
                {
                    mensajePost = "Ha ocurrido un problema!";
                }
            }
        }
        public void POSTDataActClienteNew(object json, string url, Cliente cli)
        {
            using (var content = new StringContent(JsonConvert.SerializeObject(json), System.Text.Encoding.UTF8, "application/json"))
            {
                HttpResponseMessage result = _httpClient.PostAsync(url, content).Result;
                //if (result.StatusCode == System.Net.HttpStatusCode.Created)

                if (result.IsSuccessStatusCode)
                {
                    string urlActCli = "http://200.7.208.131:8080/ApiRest/services/JavaMobil/creaSatisfaccion";

                    string creajson = @"{ empresa: " + cli.empresa + ",'sucursal':" + cli.sucursal + ",'codigo':" + cli.codigo + ",'estado':'E'}";

                    JObject lcreajson = JObject.Parse(creajson);

                    POSTDataActualizaCli(lcreajson, urlActCli);
                }
                else
                {
                    mensajePost = "Ha ocurrido un problema!";
                }
            }
        }

        public void POSTDataActualizaCli(object json, string url)
        {
            using (var content = new StringContent(JsonConvert.SerializeObject(json), System.Text.Encoding.UTF8, "application/json"))
            {
                HttpResponseMessage result = _httpClient.PostAsync(url, content).Result;
                //if (result.StatusCode == System.Net.HttpStatusCode.Created)

                if (result.IsSuccessStatusCode)
                {
                    msjPost = true;
                    DateTime now = DateTime.Now;
                    mensajePost = "Datos Enviados con Éxito!    " + now.ToString();
                }
                else
                {
                    mensajePost = "Ha ocurrido un problema!";

                }
            }
        }

        private Boolean RevisaEmail(String email)
        {
            String expresion;
            expresion = "\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*";
            if (Regex.IsMatch(email, expresion))
            {
                if (Regex.Replace(email, expresion, String.Empty).Length == 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            else
            {
                return false;
            }
        }
    }